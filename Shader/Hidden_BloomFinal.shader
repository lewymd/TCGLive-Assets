//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Hidden/BloomFinal" {
Properties {
_LensDirt ("Lens Dirt Texture", 2D) = "black" { }
_LensStarburst ("Lens Starburst Texture", 2D) = "black" { }
_MainTex (" ", 2D) = "black" { }
_LensFlare (" ", 2D) = "black" { }
_LensGlare (" ", 2D) = "black" { }
_MipResultsRTS0 (" ", 2D) = "black" { }
_MipResultsRTS1 (" ", 2D) = "black" { }
_MipResultsRTS2 (" ", 2D) = "black" { }
_MipResultsRTS3 (" ", 2D) = "black" { }
_MipResultsRTS4 (" ", 2D) = "black" { }
_MipResultsRTS5 (" ", 2D) = "black" { }
}
SubShader {
 Tags { "Mode" = "Full" }
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3870
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 102335
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 156703
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 202869
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_3.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_4.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat3.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_4.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 284463
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 384204
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 418319
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 481812
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 569545
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 648326
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 707891
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 785588
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 838386
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 870833
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 922075
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1019064
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1048730
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1175366
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1181108
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1275996
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1324437
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1381367
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1456126
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1569398
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1608752
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1681323
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1705460
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1815403
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1839137
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 1959463
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2009117
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2069490
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2104297
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2177225
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2270388
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2355576
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_5.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2391399
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2437389
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2530495
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2616735
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_11.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2663325
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2739108
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2772789
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2851465
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_11.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2911115
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 2971790
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3071059
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3132510
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_13.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3194061
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3239003
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3285474
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3401611
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3426532
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3493183
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3570854
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3668901
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3716732
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3748239
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3826227
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3903143
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 3979756
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4020181
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4106971
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4185276
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_14;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_7.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_9.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_9.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_14.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_14.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_9.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4219186
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4268083
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4337245
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4405244
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4458521
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4542007
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4611185
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4679980
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_12.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_8.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_9.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat8.xyz = u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_9.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_9.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(_LensDirtWeights4) * u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_13.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_9.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4754337
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4806154
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4888404
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 4973042
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_12.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_8.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_9.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat8.xyz = u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_9.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_9.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(_LensDirtWeights4) * u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_13.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_9.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5020200
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5103002
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5165691
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5238909
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_12.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_8.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_9.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat8.xyz = u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_15;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_7.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights4) * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_9.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_10.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_7.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights4) * u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_8.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_9.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_15.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_15.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_10.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5299463
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5347185
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5381435
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5445041
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_7.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_7.xyz = u_xlat16_0.www * u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_7.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_12.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_8.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_9.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat8.xyz = u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_8.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_8.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5539553
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5574756
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5640508
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5731740
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_7.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_7.xyz = u_xlat16_0.www * u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_8.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_7.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_13.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_9.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_10.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat9.xyz = u_xlat16_9.xyz + u_xlat16_10.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_14;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_8.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_8.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_9.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_10.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights4) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_7.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_8.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_9.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_14.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_14.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_10.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5771704
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5887558
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5917786
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 5969516
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_7.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_7.xyz = u_xlat16_0.www * u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_8.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_7.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_13.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_9.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_10.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat9.xyz = u_xlat16_9.xyz + u_xlat16_10.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_14;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_8.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_8.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_9.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_10.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = vec3(_LensDirtWeights4) * u_xlat16_7.xyz + u_xlat16_9.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_7.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_8.xyz + u_xlat16_10.xyz;
    u_xlat16_9.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_8.xyz + u_xlat16_9.xyz;
    u_xlat16_9.xyz = u_xlat16_9.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_9.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_14.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_14.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_10.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6032843
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6149421
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6166408
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Full" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6275677
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(10) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_7.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_7.xyz = u_xlat16_0.www * u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_8.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_8.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_7.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_13.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_9.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_10.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat9.xyz = u_xlat16_9.xyz + u_xlat16_10.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(8) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(9) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(10) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_16;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_7.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights4) * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_9.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_11.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_11.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_10.xyz;
    u_xlat16_11.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_11.xyz;
    u_xlat16_11.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_7.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_7.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = vec3(_LensDirtWeights4) * u_xlat16_8.xyz + u_xlat16_10.xyz;
    u_xlat16_11.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_8.xyz + u_xlat16_11.xyz;
    u_xlat16_11.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_9.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_9.xyz + u_xlat16_10.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_10.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_16.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_16.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_11.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
}
SubShader {
 Tags { "Mode" = "Half" }
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6304540
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6361857
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6448145
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6540529
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_3.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_4.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat3.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_4.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6590002
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6669773
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6732908
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6761047
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6848646
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 6911070
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7010644
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7041044
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7113098
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7165611
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_5;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_5.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_5.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(_UpscaleWeights0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7239249
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(_LensDirtWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7314966
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(2) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(_UpscaleWeights0);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * vec3(_LensDirtWeights0);
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7348639
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7449846
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7472251
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7542351
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_4.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_5.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec2 u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_7.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_7.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7638474
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7684673
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7798561
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7862911
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7886117
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7990995
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7998793
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8104688
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8167546
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8217342
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8285930
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8373221
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(3) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_10.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8452266
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8479879
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8582508
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8603618
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_5.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_6.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat5.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_8;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_5.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_8.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_8.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8651953
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8757170
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8834910
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8856164
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_11.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 8942191
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9006445
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9061942
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9141253
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_6.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_11.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9236723
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9274461
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9353530
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9380304
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_13.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9455243
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9506165
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9576971
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9685005
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec2 u_xlat16_9;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_9.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_9.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9752995
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9771769
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9854655
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 9954706
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10007728
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10090327
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10129945
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10162546
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10274746
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10324996
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10405790
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10448663
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_13.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10521785
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10596076
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10656563
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10730966
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10778031
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10866039
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10908396
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 10974876
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11071227
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11134802
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11152441
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11217853
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11330755
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11366303
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11464770
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11470242
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_13.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11585004
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    u_xlat0 = u_xlat16_0 * vec4(vec4(_SourceContribution, _SourceContribution, _SourceContribution, _SourceContribution));
    SV_Target0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    SV_Target0.w = u_xlat0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11624099
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_4.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensStarburstWeights5;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights5, _LensStarburstWeights5, _LensStarburstWeights5)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength);
    u_xlat16_0.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11709344
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtWeights5;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights5, _LensDirtWeights5, _LensDirtWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11756658
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_6.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_6.xyz = u_xlat16_0.www * u_xlat16_6.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_3.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_7.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat0.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat0.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_3.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat1.xyz * u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11859622
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11906666
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 11988595
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12012230
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12071883
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS5, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _UpscaleWeights5;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MipResultsRTS5;
UNITY_LOCATION(6) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(7) uniform mediump sampler2D _LensFlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS5, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights5, _UpscaleWeights5, _UpscaleWeights5)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12181233
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensStarburstWeights4;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights4, _LensStarburstWeights4, _LensStarburstWeights4)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12204805
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights4) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights4) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtWeights4;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights4) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12302186
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_11;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_11.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_11.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_7.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_8.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat7.xyz = u_xlat16_7.xyz + u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_12;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_4.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_5.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_4.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_4.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_12.xy = u_xlat16_3.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_3.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_3.xx + u_xlat16_12.xy;
    u_xlat16_3.xy = u_xlat16_3.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_3.xy = u_xlat16_3.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_3.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12348232
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS4, vs_TEXCOORD2.xy);
    u_xlat16_2.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_2.xyz = u_xlat16_0.www * u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_2.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _UpscaleWeights4;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MipResultsRTS4;
UNITY_LOCATION(5) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(6) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensGlare;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
float u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS4, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights4) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0 = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12409884
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec2 u_xlat16_6;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_6.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_6.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(_LensStarburstWeights2) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_5.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_5.xyz = u_xlat16_0.www * u_xlat16_5.xyz;
    u_xlat16_4.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_3.xyz;
    u_xlat1.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensStarburstWeights3;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec2 u_xlat16_4;
void main()
{
    u_xlat16_0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_4.xy = u_xlat16_0.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_0.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_0.xx + u_xlat16_4.xy;
    u_xlat16_0.xy = u_xlat16_0.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_0.xy = u_xlat16_0.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_0.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_3.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(_UpscaleWeights0) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(_LensStarburstWeights2) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = vec3(vec3(_LensStarburstWeights3, _LensStarburstWeights3, _LensStarburstWeights3)) * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = u_xlat1.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _BloomParams.xxx + u_xlat16_1.xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_LensFlareStarburstStrength) + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat16_0.xyz;
    u_xlat1.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat1.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12456276
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_0 = texture(_MipResultsRTS3, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _UpscaleWeights3;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtWeights3;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MipResultsRTS3;
UNITY_LOCATION(4) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(5) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(7) uniform mediump sampler2D _LensDirt;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_0.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(_UpscaleWeights0) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(_LensDirtWeights0) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = texture(_MipResultsRTS3, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = vec3(vec3(_UpscaleWeights3, _UpscaleWeights3, _UpscaleWeights3)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = vec3(vec3(_LensDirtWeights3, _LensDirtWeights3, _LensDirtWeights3)) * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat0.x = u_xlat16_1.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
 Pass {
  Tags { "Mode" = "Half" }
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 12546978
Program "vp" {
SubProgram "gles3 " {
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _BloomRange;
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec2 u_xlat16_10;
void main()
{
    u_xlat16_0 = texture(_MipResultsRTS1, vs_TEXCOORD2.xy);
    u_xlat16_1.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_1.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_0 = texture(_MipResultsRTS0, vs_TEXCOORD2.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_3.xyz = u_xlat16_0.www * u_xlat16_3.xyz;
    u_xlat16_2.xyz = vec3(_UpscaleWeights0) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = texture(_MipResultsRTS2, vs_TEXCOORD2.xy);
    u_xlat16_4.xyz = u_xlat16_0.xyz * _BloomRange.xxx;
    u_xlat16_4.xyz = u_xlat16_0.www * u_xlat16_4.xyz;
    u_xlat16_2.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_0.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _BloomParams.xxx + u_xlat16_0.xyz;
    u_xlat16_0.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_5.xyz = u_xlat16_1.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_1.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = vec3(_LensDirtWeights0) * u_xlat16_3.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1.xyz = vec3(_LensStarburstWeights2) * u_xlat16_4.xyz + u_xlat16_1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_2.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_10.xy = u_xlat16_2.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_2.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_2.xx + u_xlat16_10.xy;
    u_xlat16_2.xy = u_xlat16_2.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_2.xy = u_xlat16_2.xy + vec2(0.5, 0.5);
    u_xlat16_6.xyz = texture(_LensStarburst, u_xlat16_2.xy).xyz;
    u_xlat16_7.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in mediump vec2 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out mediump vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD2.xy = u_xlat0.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump float _UpscaleWeights0;
uniform 	mediump float _UpscaleWeights1;
uniform 	mediump float _UpscaleWeights2;
uniform 	mediump float _LensStarburstWeights0;
uniform 	mediump float _LensStarburstWeights1;
uniform 	mediump float _LensStarburstWeights2;
uniform 	mediump float _LensDirtWeights0;
uniform 	mediump float _LensDirtWeights1;
uniform 	mediump float _LensDirtWeights2;
uniform 	mediump float _LensDirtStrength;
uniform 	mediump vec4 hlslcc_mtx4x4_LensFlareStarMatrix[4];
uniform 	mediump float _LensFlareStarburstStrength;
uniform 	mediump float _SourceContribution;
uniform 	mediump float _UpscaleContribution;
uniform 	mediump vec4 _BloomParams;
UNITY_LOCATION(0) uniform mediump sampler2D _MipResultsRTS0;
UNITY_LOCATION(1) uniform mediump sampler2D _MipResultsRTS1;
UNITY_LOCATION(2) uniform mediump sampler2D _MipResultsRTS2;
UNITY_LOCATION(3) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(4) uniform mediump sampler2D _LensFlare;
UNITY_LOCATION(5) uniform mediump sampler2D _LensGlare;
UNITY_LOCATION(6) uniform mediump sampler2D _LensDirt;
UNITY_LOCATION(7) uniform mediump sampler2D _LensStarburst;
in mediump vec2 vs_TEXCOORD0;
in mediump vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec2 u_xlat16_13;
void main()
{
    u_xlat16_0.xyz = texture(_LensDirt, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_LensGlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_2.xyz = texture(_LensFlare, vs_TEXCOORD2.xy).xyz;
    u_xlat16_3.xyz = texture(_MipResultsRTS1, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * vec3(vec3(_UpscaleWeights1, _UpscaleWeights1, _UpscaleWeights1));
    u_xlat16_5.xyz = texture(_MipResultsRTS0, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(_UpscaleWeights0) * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = texture(_MipResultsRTS2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_4.xyz = vec3(vec3(_UpscaleWeights2, _UpscaleWeights2, _UpscaleWeights2)) * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_UpscaleContribution, _UpscaleContribution, _UpscaleContribution));
    u_xlat16_4.xyz = u_xlat16_4.xyz * _BloomParams.xxx + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_3.xyz * vec3(vec3(_LensDirtWeights1, _LensDirtWeights1, _LensDirtWeights1));
    u_xlat16_8.xyz = u_xlat16_3.xyz * vec3(vec3(_LensStarburstWeights1, _LensStarburstWeights1, _LensStarburstWeights1));
    u_xlat16_8.xyz = vec3(vec3(_LensStarburstWeights0, _LensStarburstWeights0, _LensStarburstWeights0)) * u_xlat16_5.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = vec3(_LensDirtWeights0) * u_xlat16_5.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = vec3(vec3(_LensDirtWeights2, _LensDirtWeights2, _LensDirtWeights2)) * u_xlat16_6.xyz + u_xlat16_7.xyz;
    u_xlat16_8.xyz = vec3(_LensStarburstWeights2) * u_xlat16_6.xyz + u_xlat16_8.xyz;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_LensDirtStrength, _LensDirtStrength, _LensDirtStrength));
    u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat16_13.xy = u_xlat16_4.yy * hlslcc_mtx4x4_LensFlareStarMatrix[1].xy;
    u_xlat16_4.xy = hlslcc_mtx4x4_LensFlareStarMatrix[0].xy * u_xlat16_4.xx + u_xlat16_13.xy;
    u_xlat16_4.xy = u_xlat16_4.xy + hlslcc_mtx4x4_LensFlareStarMatrix[3].xy;
    u_xlat16_4.xy = u_xlat16_4.xy + vec2(0.5, 0.5);
    u_xlat16_1.xyz = texture(_LensStarburst, u_xlat16_4.xy).xyz;
    u_xlat16_2.xyz = texture(_LensStarburst, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = u_xlat16_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat1.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_LensFlareStarburstStrength) + u_xlat0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);
    SV_Target0.xyz = vec3(vec3(_SourceContribution, _SourceContribution, _SourceContribution)) * u_xlat16_0.xyz + u_xlat16_4.xyz;
    u_xlat0.x = u_xlat16_0.w * _SourceContribution;
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
""
}
SubProgram "gles3 " {
Keywords { "AB_HIGH_PRECISION" }
""
}
}
}
}
}